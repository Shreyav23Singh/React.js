* * * * * * * * * * * * * * * * * * * * * * * ExpenseForm.js * * * * * * * * * * * * * * * * * * * * ** *
import React, { useState } from "react";
import "./ExpenseForm.css";

const ExpenseForm = (props) => {
  const [enteredTitle, setEnteredTitle] = useState(""); //Here we are passing string to each useState , we can combine in one useState by assigning Objects
  const [enteredAmount, setEnteredAmount] = useState("");
  const [enteredDate, setEnteredDate] = useState("");

  // const [userInput , setUserInput] =useState({
  //     enteredTitle:'',
  //     enteredAmount:'',
  //     enteredDate:''

  // });

  const titleChangeHandler = (event) => {
    setEnteredTitle(event.target.value);
    // setUserInput({
    //     ...userInput,
    //     enteredTitle :event.target.value,
    // })
    // setUserInput((prevState) => {
    //     return (...prevState ,enteredTitle :event.target.value);
    // });
  };
  const amountChangeHandler = (event) => {
    setEnteredAmount(event.target.value);
    // setUserInput({
    //     ...userInput,
    //     enteredAmount :event.target.value,
    // })
  };
  const dateChangeHandler = (event) => {
    setEnteredDate(event.target.value);
    //    setUserInput({
    //     ...userInput,
    //     enteredDate:event.target.value,
    // })
  };
  const submitHandler = (event) => {
    event.preventDefault();
    const expenseDate = {
      title: enteredTitle,
      amount: enteredAmount,
      date: new Date(enteredDate),
    };
    props.onSaveExpenseData(expenseDate);
    setEnteredTitle(""); //Two Way Binding - Making the expense form input visible on screen
    setEnteredAmount("");
    setEnteredDate("");
  };
  return (
    <form onSubmit={submitHandler}>
      <div className="new-expense__controls">
        <div className="new-expense__control">
          <label>Title</label>
          <input
            type="text"
            value={enteredTitle}
            onChange={titleChangeHandler}
          />
        </div>
        <div className="new-expense__control">
          <label>Amount</label>
          <input
            type="number"
            min="0.01"
            step="0.01"
            value={enteredAmount}
            onChange={amountChangeHandler}
          />
        </div>

        <div className="new-expense__control">
          <label>Date</label>
          <input
            type="date"
            min="2023-5-21"
            max="2027-5-21"
            value={enteredDate}
            onChange={dateChangeHandler}
          />
        </div>
        <div className="new-expense__actions">
          <button type="submit">Add Expense</button>
        </div>
      </div>
    </form>
  );
};
export default ExpenseForm;

* * * * * * * * * * * * * * * * ** Expenses.js * * * * * * *
import ExpenseItem from "./ExpenseItem";
import Card from '../UI/Card';
import ExpensesFilter from './ExpensesFilter';
import './Expenses.css';
import { useState } from "react";

const Expenses = (props) => {
    const [filteredYear ,setFilteredYear] =useState('2023');

    const filterChangeHandler = selectedYear =>{
        setFilteredYear(selectedYear);
    }
    return(
        <Card className="expenses">
        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>
        {props.items.map((expense) =>(
            <ExpenseItem 
            title={expense.title}
             amount={expense.amount}
              date={expense.date}/>
              ))}

        </Card>

    );

}
export default Expenses;

* * * * *  * * * * * * ** * ** * * * * * * * * * * * * *   App.js * * * * * * * * * * * * * * * *
import './App.css';
import React ,{useState} from 'react';
import NewExpense  from './component/Expense/NewExpense';
import Expenses from './component/Expense/Expenses';


const DUMMY_EXPENSES =[
  {
    id:' e1 ',
    title : 'Mobile' ,
    amount: 50000 ,
    date :new Date(2023,6,21),
    locationOfExpend:"Asansol",


  },
  {
    id:' e2',
    title : 'Home' ,
    amount: 965 ,
    date :new Date(2023,7,21),
    locationOfExpend:"Asansol",


  },
  {
    id:' e3 ',
    title : 'Car' ,
    amount: 10.5 ,
    date :new Date(2023,8,21),
    locationOfExpend:"Asansol",


  },
  {
    id:' e4 ',
    title : 'Furniture' ,
    amount: 65.5 ,
    date :new Date(2023,9,21),
    locationOfExpend:"Asansol",



  },
];
const App =() =>{
  const [expenses , setExpenses] =useState(DUMMY_EXPENSES);

  const addExpenseHandler =(expense) =>{
    setExpenses((prevExpenses)  => {
      console.log(expense)
      return [expense, ...prevExpenses];
    })
  }

  

 
  return(
    <div>
    <NewExpense onAddExpense ={addExpenseHandler}/>
    <Expenses items={expenses}/>
    </div>
  )
};

export default App;
